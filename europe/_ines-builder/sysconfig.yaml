# Commodities DB
commodities:
  commodity: 
      node:
        co2_content: [co2_content,1.0]
        commodity_price: [commodity_price,1.0]

# Electricity Demand
elec_demand:
  entities:
    commodity:
      node: null
  parameters:
    default:
      commodity:
        node:
          - [flow_scaling_method,scale_to_annual,[[1]]]
    dynamic:
      commodity__region:
        node:
          flow_profile: [flow_profile,[[1]],[population,{}],null,PECD1]

# Power Sector DB including Transmission in Target Resolution
power_sector:
  entities:
    commodity:
      node:
        - [[1]]
    technology:
      unit:
        - [[1]]
    commodity__to_technology:
      node__to_unit: 
        - [[1],[2]]
    technology__to_commodity:
      unit__to_node: 
        - [[1],[2]]
    commodity__to_technology__to_commodity: 
      unit_flow__unit_flow:
        - [[2],[3],[1],[2]]
    storage:
      node: 
        - [[1]]
    storage_connection:
      link: 
        - [[1,2]]
      node__link__node: 
        - [[1],[1,2],[2]]
        - [[2],[1,2],[1]]
  parameters:
    user:
      technology:
        unit:
          investment_method: [technology,investment_method,[[1]],[[1]]]
      storage:
        node:
          storage_investment_method: [storage,investment_method,[[1]],[[1]]]
      storage_connection:
        link:
          investment_method: [storage,investment_method,[[1]],[[1,2]]]
    default:
      technology:
        unit: 
          - [retirement_method,economic_retirement,[[1]]]
      storage:
        node:
          - [node_type,storage,[[1]]]
          - [storage_capacity,1.0,[[1]]]
          - [storage_limit_method,upper_limit,[[1]]]
          - [storage_retirement_method,economic_retirement,[[1]]]   
      storage_connection:
        link:
          - [retirement_method,economic_retirement,[[1,2]]]   
        node__link__node:
          - [capacity,1.0,[[1],[1,2],[2]]]
          - [capacity,1.0,[[2],[1,2],[1]]]
    fixed:
      technology:
        unit:
          lifetime: [lifetime,1.0,[[1]]]
      technology__to_commodity:
        unit__to_node:
          capacity: [capacity,1.0,[[1],[2]]]
          investment_cost: [investment_cost,1.0,[[1],[2]]]
          fixed_cost: [fixed_cost,1.0,[[1],[2]]]
          operational_cost: [other_operational_cost,1.0,[[1],[2]]]
      commodity__to_technology__to_commodity:
        unit_flow__unit_flow:
          conversion_rate: [equality_ratio,1.0,[[2],[3],[1],[2]]]
          CO2_captured: [equality_ratio,1.0,[[2],[3],[1],[2]]]
      storage:
        node:
          investment_cost: [storage_investment_cost,1.0,[[1]]]
          lifetime: [storage_lifetime,1.0,[[1]]]
      storage_connection:
        link:
          investment_cost: [investment_cost,1.0,[[1,2]]]
          fixed_cost: [fixed_cost,1.0,[[1,2]]]
          lifetime: [lifetime,1.0,[[1,2]]]
        node__link__node:
          operational_cost: [operational_cost,1.0,[[2],[1,2],[1]]]
          efficiency_in: [efficiency,1.0,[[2],[1,2],[1]]]
          efficiency_out: [efficiency,1.0,[[1],[1,2],[2]]]
    dynamic:
      technology__region:
        unit:
          units_existing: [units_existing,[[1]],[area,{}],0.0,PECD1]
      storage__region:
        node:
          storages_existing: [storages_existing,[[1]],[area,{}],0.0,PECD1]
      storage_connection__region:
        link:
          links_existing: [links_existing,[[1,2]],[area,{}],0.0,PECD1]

# Variable Renewable Energy
vre:
  entities:
    technology:
      unit:
        - [[1]]
    technology__to_commodity:
      unit__to_node: 
        - [[1],[2]]
    technology_type:
      set: 
        - [[1]]
    technology_type__technology:
      set__unit: 
        - [[1],[2]]
  parameters:
    user:
      technology:
        unit:
          investment_method: [technology,investment_method,[[1]],[[1]]]
    default:
      technology:
        unit: 
          - [retirement_method,economic_retirement,[[1]]]
      technology__to_commodity:
        unit__to_node:
          - [capacity,1.0,[[1],[2]]]
    fixed:
      technology:
        unit:
          lifetime: [lifetime,1.0,[[1]]]
      technology__to_commodity:
        unit__to_node:
          investment_cost: [investment_cost,1.0,[[1],[2]]]
          fixed_cost: [fixed_cost,1.0,[[1],[2]]]
          operational_cost: [other_operational_cost,1.0,[[1],[2]]]
    dynamic:
      technology__region:
        unit:
          units_existing: [units_existing,[[1]],[area,{}],0.0,{"on": PECD2, "off": OFF3}]
      technology__to_commodity__region:
        unit__to_node:
          profile_limit_upper: [profile_limit_upper,[[1],[2]],[potential,{existing: capacity}],null,{"on": PECD2, "off": OFF3}]
      technology_type__region:
        set:
          potential: [invest_max_total,[[1]],[area,{}],0.0,{"on": PECD2, "off": OFF3}]

# Hydro systems
hydro_systems:
  entities:
    reservoir__region:
      node:
        - [[1,2]]
    technology__to_commodity__region:
      unit:
        - [[1,3]]
      unit__to_node:
        - [[1,3],[2,3]]
    reservoir__to_technology__region:
      node__to_unit:
        - [[1,3],[2,3]]
    reservoir__to_technology__to_commodity__region:
      unit_flow__unit_flow:
        - [[2,4],[3,4],[1,4],[2,4]]
  parameters:
    user: null
    default:
      technology__to_commodity__region:
        unit:
          - [investment_method,not_allowed,[[1,3]]]
      reservoir__region:
        node:
          - [node_type,storage,[[1,2]]]
          - [storage_limit_method,lower_limit,[[1,2]]]
          - [storage_state_fix_method,fix_start,[[1,2]]]
          - [flow_scaling_method,use_profile_directly,[[1,2]]]
          - [storage_investment_method,not_allowed,[[1,2]]]
    fixed:
      reservoir__region:
        node:
          inflow: [flow_profile,1.0,[[1,2]]]
          capacity: [storage_capacity,1.0,[[1,2]]]
          initial_capacity: [storage_state_fix,1.0,[[1,2]]]
          minimum_capacity: [storage_state_lower_limit,1.0,[[1,2]]]
      reservoir__to_technology__region: 
        node__to_unit:
          maximum_discharge: [capacity,1.0,[[1,3],[2,3]]]
      technology__to_commodity__region:
        unit__to_node:
          operational_cost: [other_operational_cost,1.0,[[1,3],[2,3]]]
          fixed_cost: [fixed_cost,1.0,[[1,3],[2,3]]]
          profile_fix: [profile_fix,1.0,[[1,3],[2,3]]]
          capacity: [capacity,1.0,[[1,3],[2,3]]]
      reservoir__to_technology__to_commodity__region:
        unit_flow__unit_flow:
          efficiency: [equality_ratio,1.0,[[2,4],[3,4],[1,4],[2,4]]]

# power transmission map
power_transmission:
  entities:
    region__transmission__commodity__region:
      link:
        - [[1,3,4]]
      node__link__node:
        - [[3,1],[1,3,4],[3,4]]
  parameters:
    user: null
    default:
      region__transmission__commodity__region:
        link: 
          - [retirement_method,economic_retirement,[[1,3,4]]]
          - [investment_method,cumulative_limits,[[1,3,4]]]
        node__link__node:
          - [capacity,1.0,[[3,1],[1,3,4],[3,4]]]
          - [efficiency,1.0,[[3,1],[1,3,4],[3,4]]]
    fixed:
      region__transmission__commodity__region:
        link:
          investment_cost: [investment_cost,1.0,[[1,3,4]]]
          lifetime: [lifetime,1.0,[[1,3,4]]]
          links_existing: [links_existing,1.0,[[1,3,4]]]
          links_potentials: [links_max_cumulative,1.0,[[1,3,4]]]

# Industrial sector map
industrial_sector:
  entities:
    commodity:
      node:
        - [[1]]
    technology:
      unit: 
        - [[1]]
    technology__to_commodity:
      unit__to_node:
        - [[1],[2]]
    commodity__to_technology:
      node__to_unit:
        - [[1],[2]]
    commodity__to_technology__to_commodity:
      unit_flow__unit_flow:
        - [[2],[3],[1],[2]]
    technology__to_commodity__to_commodity:
      unit_flow__unit_flow:
        - [[1],[3],[1],[2]]
  parameters:
    user: null
    default:
      technology:
        unit: 
          - [retirement_method,economic_retirement,[[1]]]
    fixed:
      technology:
        unit:
          lifetime: [lifetime,1.0,[[1]]]
      technology__to_commodity: 
        unit__to_node:
          capacity: [capacity,1.0,[[1],[2]]]
          investment_cost: [investment_cost,1.0,[[1],[2]]]
          fixed_cost: [fixed_cost,1.0,[[1],[2]]]
      commodity__to_technology__to_commodity:
        unit_flow__unit_flow:
          conversion_rate: [equality_ratio,1.0,[[2],[3],[1],[2]]]
      technology__to_commodity__to_commodity:
        unit_flow__unit_flow:
          CO2_captured: [equality_ratio,1.0,[[1],[3],[1],[2]]]
    dynamic:
      technology__region:
        unit:
          units_existing: [units_existing,[[1]],[area,{}],0.0,NUTS3]
      commodity__region:
        node:
          demand: [flow_profile,[[1]],[population,{}],null,NUTS3]

# Biomass Production
biomass_production:
  entities:
    commodity:
      node: 
        - [[1]]
    technology:
      unit:
        - [[1]]
    technology__to_commodity:
      unit__to_node:
        - [[1],[2]]
      set:
        - [[1,2]]
      set__unit_flow:
        - [[1,2],[1],[2]]
  parameters:
    dynamic:
      technology__to_commodity__region:
        unit__to_node:
          operational_cost: [other_operational_cost,[[1],[2]],[area,{}],null,PECD1]
        set:
          average_hourly_production: [flow_max_cumulative,[[1,2]],[area,{}],null,PECD1]

# gas sector modelling
gas_sector:
  entities:
    commodity:
      node:
        - [[1]]
    technology:
      unit:
        - [[1]]
    commodity__to_technology:
      node__to_unit: 
        - [[1],[2]]
    technology__to_commodity:
      unit__to_node: 
        - [[1],[2]]
    commodity__to_technology__to_commodity: 
      unit_flow__unit_flow:
        - [[2],[3],[1],[2]]
    storage:
      node: 
        - [[1]]
    storage_connection:
      link: 
        - [[1,2]]
        - [[2,1]]
      node__link__node: 
        - [[1],[1,2],[2]]
        - [[2],[2,1],[1]]
  parameters:
    user:
      technology:
        unit:
          investment_method: 
            - [technology,investment_method,[[1]],[[1]]]
      storage:
        node:
          storage_investment_method: 
            - [storage,investment_method,[[1]],[[1]]]
      storage_connection:
        link:
          investment_method: 
            - [storage,investment_method,[[1]],[[1,2]]]
            - [storage,investment_method,[[1]],[[2,1]]]
    default:
      technology:
        unit: 
          - [retirement_method,economic_retirement,[[1]]]
      storage:
        node:
          - [node_type,storage,[[1]]]
          - [storage_limit_method,upper_limit,[[1]]]
          - [storage_retirement_method,economic_retirement,[[1]]]   
      storage_connection:
        link:
          - [retirement_method,economic_retirement,[[1,2]]] 
          - [retirement_method,economic_retirement,[[2,1]]]  
    fixed:
      technology:
        unit:
          lifetime: [lifetime,1.0,[[1]]]
      technology__to_commodity:
        unit__to_node:
          capacity: [capacity,1.0,[[1],[2]]]
          investment_cost: [investment_cost,1.0,[[1],[2]]]
          fixed_cost: [fixed_cost,1.0,[[1],[2]]]
          operational_cost: [other_operational_cost,1.0,[[1],[2]]]
      commodity__to_technology__to_commodity:
        unit_flow__unit_flow:
          conversion_rate: [equality_ratio,1.0,[[2],[3],[1],[2]]]
      storage:
        node:
          investment_cost: [storage_investment_cost,1.0,[[1]]]
          fixed_cost: [storage_fixed_cost,1.0,[[1]]]
          lifetime: [storage_lifetime,1.0,[[1]]]
      storage_connection:
        link:
          investment_cost: [investment_cost,1.0,[[1,2]]]
          lifetime: [lifetime,1.0,[[1,2]]]
        node__link__node:
          capacity_in: [capacity,1.0,[[2],[2,1],[1]]]
          capacity_out: [capacity,1.0,[[1],[1,2],[2]]]  
          operational_cost_in: [operational_cost,1.0,[[2],[2,1],[1]]]
          operational_cost_out: [operational_cost,1.0,[[1],[1,2],[2]]]
          efficiency_in: [efficiency,1.0,[[2],[2,1],[1]]]
          efficiency_out: [efficiency,1.0,[[1],[1,2],[2]]]
    dynamic:
      technology__region:
        unit:
          units_existing: [units_existing,[[1]],[area,{}],0.0,PECD1]
      technology__to_commodity_region:
        unit__to_node:
          operational_cost: [other_operational_cost,[[1],[2]],[area,{}],null,PECD1]
      storage__region:
        node:
          capacity: [storage_capacity,[[1]],[area,{}],null,PECD1]
          storages_existing: [storages_existing,[[1]],[area,{}],null,PECD1]
          potentials: [storages_max_cumulative,[[1]],[area,{}],null,PECD1]
      storage_connection__region:
        link:
          links_existing_in: [links_existing,[[2,1]],[area,{}],null,PECD1]
          links_existing_out: [links_existing,[[1,2]],[area,{}],null,PECD1]
          potentials_in: [links_max_cumulative,[[2,1]],[area,{}],null,PECD1]
          potentials_out: [links_max_cumulative,[[1,2]],[area,{}],null,PECD1]
        node__link__node:
          capacity_in: [capacity,[[2],[2,1],[1]],[area,{}],null,PECD1]
          capacity_out: [capacity,[[1],[1,2],[2]],[area,{}],null,PECD1]
          operational_cost_in: [operational_cost,[[2],[2,1],[1]],[area,{}],null,PECD1]
          operational_cost_out: [operational_cost,[[1],[1,2],[2]],[area,{}],null,PECD1]
          
# gas transmission map
gas_transmission:
  entities:
    pipeline:
      link:
        - [[1,2,3]]
      node__link__node:
        - [[2,1],[1,2,3],[2,3]]
  parameters:
    user: null
    default:
      region__transmission__commodity__region:
        link: 
          - [retirement_method,economic_retirement,[[1,2,3]]]
          - [investment_method,cumulative_limits,[[1,2,3]]]
        node__link__node:
          - [capacity,1.0,[[2,1],[1,2,3],[2,3]]]
          - [efficiency,1.0,[[2,1],[1,2,3],[2,3]]]
    fixed:
      pipeline:
        link:
          investment_cost: [investment_cost,1.0,[[1,2,3]]]
          operational_cost: [operational_cost,1.0,[[1,2,3]]]
          lifetime: [lifetime,1.0,[[1,2,3]]]
          links_existing: [links_existing,1.0,[[1,2,3]]]
          potentials: [links_max_cumulative,1.0,[[1,2,3]]]

# gas pipelines integration
gas_pipelines:
  entities:
    pipeline:
      link:
        - [[1,2,3]]
      node__link__node:
        - [[2,1],[1,2,3],[2,3]]
  parameters:
    user:
    default:
      pipeline:
        link: 
          - [retirement_method,economic_retirement,[[1,2,3]]]
          - [investment_method,cumulative_limits,[[1,2,3]]]
        node__link__node:
          - [capacity,1.0,[[2,1],[1,2,3],[2,3]]]
          - [efficiency,1.0,[[2,1],[1,2,3],[2,3]]]
    fixed:
      pipeline:
        link:
          investment_cost: [investment_cost,1.0,[[1,2,3]]]
          lifetime: [lifetime,1.0,[[1,2,3]]]
          links_existing: [links_existing,1.0,[[1,2,3]]]
          links_potentials: [links_max_cumulative,1.0,[[1,2,3]]]